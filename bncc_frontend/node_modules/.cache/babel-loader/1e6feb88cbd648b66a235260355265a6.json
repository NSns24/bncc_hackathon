{"ast":null,"code":"import _slicedToArray from \"/Users/ns/Code/bncc_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ns/Code/bncc_frontend/src/containers/Preference/Sport/Sport.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Select, Spin, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../axios\";\nimport * as actions from \"../../../store/actions/index\";\nconst Option = Select.Option;\n\nfunction Sport({\n  user,\n  onSubmit\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fetching = _useState4[0],\n        setFetching = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        value = _useState6[0],\n        setValue = _useState6[1];\n\n  const fetchSports = value => {\n    setFetching(true);\n    const data = {\n      name: value\n    };\n    axios.post('/sport/search', data).then(res => {\n      setData(res.data.sports);\n      setFetching(false);\n    });\n  };\n\n  useEffect(() => {\n    fetchSports('');\n  }, []);\n\n  const submitHandler = async () => {\n    await value.forEach(item => {\n      const data = {\n        userSportMapping: {\n          userId: user.id,\n          sportId: +item.key\n        }\n      };\n      axios.post('/user/sport/mapping/upsert', data);\n    });\n    onSubmit();\n  };\n\n  const changeHandler = value => {\n    setValue(value);\n    setData([]);\n    setFetching(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"What Sports do you like ? (Choose minimal one)\"), React.createElement(Select, {\n    mode: \"multiple\",\n    labelInValue: true,\n    value: value,\n    placeholder: \"Select Sports\",\n    notFoundContent: fetching ? React.createElement(Spin, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : null,\n    filterOption: false,\n    onSearch: fetchSports,\n    onChange: changeHandler,\n    style: {\n      width: \"50%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.map(d => React.createElement(Option, {\n    key: d.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, d.name))), React.createElement(Button, {\n    type: \"primary\",\n    onClick: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.authReducer.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: () => dispatch(actions.updateCurrPref())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sport);","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/containers/Preference/Sport/Sport.js"],"names":["React","useState","useEffect","Select","Spin","Button","connect","axios","actions","Option","Sport","user","onSubmit","data","setData","fetching","setFetching","value","setValue","fetchSports","name","post","then","res","sports","submitHandler","forEach","item","userSportMapping","userId","id","sportId","key","changeHandler","width","map","d","mapStateToProps","state","authReducer","mapDispatchToProps","dispatch","updateCurrPref"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,MAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;MAEQC,M,GAAWN,M,CAAXM,M;;AAER,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAf,EAAmC;AAAA,oBACPX,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,QACxBY,IADwB;AAAA,QAClBC,OADkB;;AAAA,qBAECb,QAAQ,CAAC,KAAD,CAFT;AAAA;AAAA,QAExBc,QAFwB;AAAA,QAEdC,WAFc;;AAAA,qBAGLf,QAAQ,CAAC,EAAD,CAHH;AAAA;AAAA,QAGxBgB,KAHwB;AAAA,QAGjBC,QAHiB;;AAK/B,QAAMC,WAAW,GAAGF,KAAK,IAAI;AACzBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAMH,IAAI,GAAG;AACTO,MAAAA,IAAI,EAAEH;AADG,KAAb;AAIAV,IAAAA,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BR,IAA5B,EAAkCS,IAAlC,CAAuCC,GAAG,IAAI;AAC1CT,MAAAA,OAAO,CAACS,GAAG,CAACV,IAAJ,CAASW,MAAV,CAAP;AACAR,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAHD;AAIH,GAVD;;AAYAd,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,aAAa,GAAG,YAAY;AAC9B,UAAMR,KAAK,CAACS,OAAN,CAAcC,IAAI,IAAI;AACxB,YAAMd,IAAI,GAAG;AACTe,QAAAA,gBAAgB,EAAE;AACdC,UAAAA,MAAM,EAAElB,IAAI,CAACmB,EADC;AAEdC,UAAAA,OAAO,EAAE,CAACJ,IAAI,CAACK;AAFD;AADT,OAAb;AAOAzB,MAAAA,KAAK,CAACc,IAAN,CAAW,4BAAX,EAAyCR,IAAzC;AACH,KATK,CAAN;AAWAD,IAAAA,QAAQ;AACX,GAbD;;AAeA,QAAMqB,aAAa,GAAGhB,KAAK,IAAI;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAJD;;AAMA,SACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADA,EAEA,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,YAAY,MAFhB;AAGI,IAAA,KAAK,EAAEC,KAHX;AAII,IAAA,WAAW,EAAC,eAJhB;AAKI,IAAA,eAAe,EAAEF,QAAQ,GAAG,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA2B,IALxD;AAMI,IAAA,YAAY,EAAE,KANlB;AAOI,IAAA,QAAQ,EAAEI,WAPd;AAQI,IAAA,QAAQ,EAAEc,aARd;AASI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKrB,IAAI,CAACsB,GAAL,CAASC,CAAC,IACP,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACN,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBM,CAAC,CAAChB,IAAtB,CADH,CAXL,CAFA,EAiBA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEK,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA,CADJ;AAqBH;;AAED,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH3B,IAAAA,IAAI,EAAE2B,KAAK,CAACC,WAAN,CAAkB5B;AADrB,GAAP;AAGH,CAJD;;AAMA,MAAM6B,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH7B,IAAAA,QAAQ,EAAE,MAAM6B,QAAQ,CAACjC,OAAO,CAACkC,cAAR,EAAD;AADrB,GAAP;AAGH,CAJD;;AAMA,eAAepC,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,KAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Select, Spin, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport axios from \"../../../axios\";\nimport * as actions from \"../../../store/actions/index\";\n\nconst { Option } = Select;\n\nfunction Sport({ user, onSubmit }) {\n    const [data, setData] = useState([]);\n    const [fetching, setFetching] = useState(false);\n    const [value, setValue] = useState([]);\n\n    const fetchSports = value => {\n        setFetching(true);\n        const data = {\n            name: value\n        }\n\n        axios.post('/sport/search', data).then(res => {\n            setData(res.data.sports);\n            setFetching(false);\n        });\n    };\n\n    useEffect(() => {\n        fetchSports('');\n    }, []);\n\n    const submitHandler = async () => {\n        await value.forEach(item => {\n            const data = {\n                userSportMapping: {\n                    userId: user.id,\n                    sportId: +item.key\n                }\n            }\n\n            axios.post('/user/sport/mapping/upsert', data);\n        });\n\n        onSubmit();\n    }\n\n    const changeHandler = value => {\n        setValue(value);\n        setData([]);\n        setFetching(false);\n    };\n\n    return (\n        <>\n        <h1>What Sports do you like ? (Choose minimal one)</h1>\n        <Select\n            mode=\"multiple\"\n            labelInValue\n            value={value}\n            placeholder=\"Select Sports\"\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n            filterOption={false}\n            onSearch={fetchSports}\n            onChange={changeHandler}\n            style={{ width: \"50%\" }}\n        >\n            {data.map(d => (\n                <Option key={d.id}>{d.name}</Option>\n            ))}\n        </Select>\n        <Button type=\"primary\" onClick={submitHandler}>Submit</Button>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.authReducer.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmit: () => dispatch(actions.updateCurrPref())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sport);\n"]},"metadata":{},"sourceType":"module"}