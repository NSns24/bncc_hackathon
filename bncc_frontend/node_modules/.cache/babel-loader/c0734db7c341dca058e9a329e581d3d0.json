{"ast":null,"code":"import _slicedToArray from \"/Users/ns/Code/bncc_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ns/Code/bncc_frontend/src/containers/MyVenue/AreaVenue/AreaVenue.js\";\nimport React, { useState } from \"react\";\nimport { Upload, Button, Input, Icon, List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport styles from \"./AreaVenue.module.css\";\nimport * as actions from \"../../../store/actions/index\";\nimport axios from \"../../../axios\";\nconst TextArea = Input.TextArea;\nconst props = {\n  name: \"file\",\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  headers: {\n    authorization: \"authorization-text\"\n  }\n};\n\nfunction AreaVenue({\n  user,\n  onSubmit,\n  venueId\n}) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        unitName = _useState2[0],\n        setUnitName = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        unitPic = _useState4[0],\n        setUnitPic = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        unitData = _useState6[0],\n        setUnitData = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        areaName = _useState8[0],\n        setAreaName = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        areaDes = _useState10[0],\n        setAreaDes = _useState10[1];\n\n  const resetUnitForm = () => {\n    setUnitName(\"\");\n    setUnitPic(null);\n  };\n\n  const submitHandler = () => {\n    const data = {\n      area: {\n        venueId: venueId,\n        name: areaName,\n        description: areaDes\n      }\n    };\n    axios.post('/area/upsert', data).then(async res => {\n      await unitData.forEach(async item => {\n        axios;\n      });\n    });\n    onSubmit();\n  };\n\n  const addUnitHandler = () => {\n    const data = {\n      unitName: unitName,\n      unitPic: unitPic\n    };\n    const restData = [...unitData];\n    restData.push(data);\n    setUnitData(restData);\n    resetUnitForm();\n  };\n\n  const setUnitPicValue = value => {\n    setUnitPic(value.file.name);\n  };\n\n  const setUnitNameValue = value => {\n    setUnitName(value.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles.form_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.form_label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Area Name\"), React.createElement(Input, {\n    className: styles.form_input,\n    placeholder: \"Ex: Football Court, Badminton Court, ...\",\n    value: areaName,\n    onChange: e => setAreaName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.form_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.form_label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Area Description\"), React.createElement(TextArea, {\n    className: styles.form_input,\n    value: areaDes,\n    onChange: e => setAreaDes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.form_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.box_form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Unit of Area\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Unit of area describe your quantity of units in your area, which explains the definition of each of those unit.\"), React.createElement(\"div\", {\n    className: styles.box_form_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.form_label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Unit Name\"), React.createElement(Input, {\n    className: styles.form_input,\n    placeholder: \"Ex : Court C1, Court C2, ...\",\n    value: unitName,\n    onChange: setUnitNameValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.box_form_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.form_label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Unit Picture\"), React.createElement(Upload, Object.assign({}, props, {\n    onChange: setUnitPicValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), \" Click to Upload\"))), React.createElement(\"div\", {\n    className: styles.box_form_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: addUnitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Add Unit\")), React.createElement(List, {\n    bordered: true,\n    dataSource: unitData,\n    renderItem: item => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, item.unitName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: styles.form_item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Add Area\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.authReducer.user,\n    venueId: state.preferenceReducer.venueId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: () => dispatch(actions.updateCurrPref())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaVenue);","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/containers/MyVenue/AreaVenue/AreaVenue.js"],"names":["React","useState","Upload","Button","Input","Icon","List","connect","styles","actions","axios","TextArea","props","name","action","headers","authorization","AreaVenue","user","onSubmit","venueId","unitName","setUnitName","unitPic","setUnitPic","unitData","setUnitData","areaName","setAreaName","areaDes","setAreaDes","resetUnitForm","submitHandler","data","area","description","post","then","res","forEach","item","addUnitHandler","restData","push","setUnitPicValue","value","file","setUnitNameValue","target","form_item","form_label","form_input","e","box_form","box_form_item","box_form_button","mapStateToProps","state","authReducer","preferenceReducer","mapDispatchToProps","dispatch","updateCurrPref"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Upload, Button, Input, Icon, List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport styles from \"./AreaVenue.module.css\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport axios from \"../../../axios\";\n\nconst { TextArea } = Input;\n\nconst props = {\n    name: \"file\",\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    headers: {\n        authorization: \"authorization-text\"\n    }\n};\n\nfunction AreaVenue({ user, onSubmit, venueId }) {\n    const [unitName, setUnitName] = useState(\"\");\n    const [unitPic, setUnitPic] = useState(null);\n    const [unitData, setUnitData] = useState([]);\n    const [areaName, setAreaName] = useState(\"\");\n    const [areaDes, setAreaDes] = useState(\"\");\n\n    const resetUnitForm = () => {\n        setUnitName(\"\");\n        setUnitPic(null);\n    };\n\n    const submitHandler = () => {\n        const data = {\n            area: {\n                venueId: venueId,\n                name: areaName,\n                description: areaDes\n            }\n        }\n\n        axios.post('/area/upsert', data).then(async (res) => {\n            await unitData.forEach(async (item)=> {\n                axios\n            });\n        })\n\n        onSubmit();\n    };\n\n    const addUnitHandler = () => {\n        const data = {\n            unitName: unitName,\n            unitPic: unitPic\n        };\n\n        const restData = [...unitData];\n        restData.push(data);\n        setUnitData(restData);\n        resetUnitForm();\n    };\n\n    const setUnitPicValue = value => {\n        setUnitPic(value.file.name);\n    };\n\n    const setUnitNameValue = value => {\n        setUnitName(value.target.value);\n    };\n\n    return (\n        <>\n            <div className={styles.form_item}>\n                <div className={styles.form_label}>Area Name</div>\n                <Input\n                    className={styles.form_input}\n                    placeholder={\"Ex: Football Court, Badminton Court, ...\"}\n                    value={areaName}\n                    onChange={e => setAreaName(e.target.value)}\n                />\n            </div>\n            <div className={styles.form_item}>\n                <div className={styles.form_label}>Area Description</div>\n                <TextArea\n                    className={styles.form_input}\n                    value={areaDes}\n                    onChange={e => setAreaDes(e.target.value)}\n                />\n            </div>\n            <div className={styles.form_item}>\n                <div className={styles.box_form}>\n                    <h3>Unit of Area</h3>\n                    <p>\n                        Unit of area describe your quantity of units in your\n                        area, which explains the definition of each of those\n                        unit.\n                    </p>\n                    <div className={styles.box_form_item}>\n                        <div className={styles.form_label}>Unit Name</div>\n                        <Input\n                            className={styles.form_input}\n                            placeholder={\"Ex : Court C1, Court C2, ...\"}\n                            value={unitName}\n                            onChange={setUnitNameValue}\n                        />\n                    </div>\n                    <div className={styles.box_form_item}>\n                        <div className={styles.form_label}>Unit Picture</div>\n                        <Upload {...props} onChange={setUnitPicValue}>\n                            <Button>\n                                <Icon type=\"upload\" /> Click to Upload\n                            </Button>\n                        </Upload>\n                    </div>\n                    <div className={styles.box_form_button}>\n                        <Button onClick={addUnitHandler}>Add Unit</Button>\n                    </div>\n\n                    <List\n                        bordered\n                        dataSource={unitData}\n                        renderItem={item => (\n                            <List.Item>{item.unitName}</List.Item>\n                        )}\n                    />\n                </div>\n            </div>\n\n            <div className={styles.form_item}>\n                <Button type=\"primary\" onClick={submitHandler}>\n                    Add Area\n                </Button>\n            </div>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.authReducer.user,\n        venueId: state.preferenceReducer.venueId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmit: () => dispatch(actions.updateCurrPref())\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AreaVenue);\n"]},"metadata":{},"sourceType":"module"}