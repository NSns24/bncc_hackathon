{"ast":null,"code":"var _jsxFileName = \"/Users/ns/Code/bncc_frontend/src/components/Navigation/NavItems/NavItems.js\";\nimport React, { useEffect } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nfunction NavItems({\n  collapsed,\n  location,\n  user,\n  onGetUser\n}) {\n  useEffect(() => {\n    onGetUser();\n  }, [onGetUser]);\n  let menus = {\n    home: {\n      to: \"/home\",\n      type: \"home\",\n      name: \"Home\"\n    },\n    preference: {\n      to: \"/preference\",\n      type: \"home\",\n      name: \"Preference\"\n    },\n    logout: {\n      to: \"/logout\",\n      type: \"unlock\",\n      name: \"Logout\"\n    }\n  };\n  const RoleConstant = {\n    ADMIN: \"ADMIN\",\n    MEMBER: \"MEMBER\"\n  };\n\n  if (user.role === RoleConstant.ADMIN) {\n    menus = {\n      home: {\n        to: \"/homeAdmin\",\n        type: \"home\",\n        name: \"Home\"\n      },\n      myVenue: {\n        to: \"/myVenue\",\n        type: \"home\",\n        name: \"My Venue\"\n      },\n      logout: {\n        to: \"/logout\",\n        type: \"unlock\",\n        name: \"Logout\"\n      }\n    };\n  }\n\n  const activeMenuClassName = \"ant-menu-item-selected\";\n  return React.createElement(Menu, {\n    mode: \"inline\",\n    theme: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, Object.keys(menus).map((menu, index) => React.createElement(Menu.Item, {\n    key: index,\n    className: location.pathname === menus[menu].to ? activeMenuClassName : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: menus[menu].to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: menus[menu].type,\n    theme: \"twoTone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, menus[menu].name)))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.authReducer.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUser: () => dispatch(actions.getUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavItems));","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/components/Navigation/NavItems/NavItems.js"],"names":["React","useEffect","Menu","Icon","NavLink","withRouter","connect","actions","NavItems","collapsed","location","user","onGetUser","menus","home","to","type","name","preference","logout","RoleConstant","ADMIN","MEMBER","role","myVenue","activeMenuClassName","Object","keys","map","menu","index","pathname","mapStateToProps","state","authReducer","mapDispatchToProps","dispatch","getUser"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nfunction NavItems({ collapsed, location, user, onGetUser }) {\n\n    useEffect(() => {\n        onGetUser();\n    }, [onGetUser]);\n\n    let menus = {\n        home: {\n            to: \"/home\",\n            type: \"home\",\n            name: \"Home\"\n        },\n        preference: {\n            to: \"/preference\",\n            type: \"home\",\n            name: \"Preference\"\n        },\n        logout: {\n            to: \"/logout\",\n            type: \"unlock\",\n            name: \"Logout\"\n        }\n    };\n\n    const RoleConstant = { \n        ADMIN : \"ADMIN\",\n        MEMBER : \"MEMBER\"\n    }\n    \n    if(user.role === RoleConstant.ADMIN) {\n        menus = {\n            home: {\n                to: \"/homeAdmin\",\n                type: \"home\",\n                name: \"Home\"\n            },\n            myVenue: {\n                to: \"/myVenue\",\n                type: \"home\",\n                name: \"My Venue\"\n            },\n            logout: {\n                to: \"/logout\",\n                type: \"unlock\",\n                name: \"Logout\"\n            }\n        };\n    }\n\n    const activeMenuClassName = \"ant-menu-item-selected\";\n\n    return (\n        <Menu mode=\"inline\" theme=\"dark\">\n            {Object.keys(menus).map((menu, index) => (\n                <Menu.Item\n                    key={index}\n                    className={\n                        location.pathname === menus[menu].to\n                            ? activeMenuClassName\n                            : null\n                    }\n                >\n                    <NavLink exact to={menus[menu].to}>\n                        <Icon type={menus[menu].type} theme=\"twoTone\" />\n                        <span>{menus[menu].name}</span>\n                    </NavLink>\n                </Menu.Item>\n            ))}\n        </Menu>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.authReducer.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetUser: () => dispatch(actions.getUser())\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(NavItems));\n"]},"metadata":{},"sourceType":"module"}