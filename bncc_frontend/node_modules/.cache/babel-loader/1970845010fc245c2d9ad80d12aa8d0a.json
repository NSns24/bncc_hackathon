{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport axios from '../../axios';\nimport * as actions from '../actions/index';\nexport function* loginSaga(action) {\n  try {\n    const data = {\n      email: action.email,\n      password: action.password\n    };\n    const res = yield axios.post('/user/login', data);\n\n    if (res.data.success) {\n      yield localStorage.setItem('user', res.data.user.email);\n      yield put(actions.loginSuccess(res.data.user.email));\n    } else {\n      yield put(actions.loginFail(res.data.message));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* registerSaga(action) {\n  try {\n    const data = {\n      email: action.email,\n      password: action.password,\n      name: action.name,\n      phone: action.phone\n    };\n    const res = yield axios.post('/user/upsert', data);\n\n    if (res.data.success) {\n      yield localStorage.setItem('user', res.data.user.email);\n      yield put(actions.loginSuccess(res.data.user.email));\n    } else {\n      yield put(actions.loginFail(res.data.message));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/store/sagas/auth.js"],"names":["put","axios","actions","loginSaga","action","data","email","password","res","post","success","localStorage","setItem","user","loginSuccess","loginFail","message","err","console","log","registerSaga","name","phone"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAO,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC/B,MAAI;AACA,UAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADL;AAETC,MAAAA,QAAQ,EAAEH,MAAM,CAACG;AAFR,KAAb;AAKA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,aAAX,EAA0BJ,IAA1B,CAAlB;;AAEA,QAAIG,GAAG,CAACH,IAAJ,CAASK,OAAb,EAAsB;AAClB,YAAMC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,GAAG,CAACH,IAAJ,CAASQ,IAAT,CAAcP,KAA3C,CAAN;AACA,YAAMN,GAAG,CAACE,OAAO,CAACY,YAAR,CAAqBN,GAAG,CAACH,IAAJ,CAASQ,IAAT,CAAcP,KAAnC,CAAD,CAAT;AACH,KAHD,MAIK;AACD,YAAMN,GAAG,CAACE,OAAO,CAACa,SAAR,CAAkBP,GAAG,CAACH,IAAJ,CAASW,OAA3B,CAAD,CAAT;AACH;AACJ,GAfD,CAgBA,OAAMC,GAAN,EAAW;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;AAED,OAAO,UAAUG,YAAV,CAAuBhB,MAAvB,EAA+B;AAClC,MAAI;AACA,UAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADL;AAETC,MAAAA,QAAQ,EAAEH,MAAM,CAACG,QAFR;AAGTc,MAAAA,IAAI,EAAEjB,MAAM,CAACiB,IAHJ;AAITC,MAAAA,KAAK,EAAElB,MAAM,CAACkB;AAJL,KAAb;AAOA,UAAMd,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,cAAX,EAA2BJ,IAA3B,CAAlB;;AAEA,QAAIG,GAAG,CAACH,IAAJ,CAASK,OAAb,EAAsB;AAClB,YAAMC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,GAAG,CAACH,IAAJ,CAASQ,IAAT,CAAcP,KAA3C,CAAN;AACA,YAAMN,GAAG,CAACE,OAAO,CAACY,YAAR,CAAqBN,GAAG,CAACH,IAAJ,CAASQ,IAAT,CAAcP,KAAnC,CAAD,CAAT;AACH,KAHD,MAIK;AACD,YAAMN,GAAG,CAACE,OAAO,CAACa,SAAR,CAAkBP,GAAG,CAACH,IAAJ,CAASW,OAA3B,CAAD,CAAT;AACH;AACJ,GAjBD,CAkBA,OAAMC,GAAN,EAAW;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ","sourcesContent":["import { put } from 'redux-saga/effects';\nimport axios from '../../axios';\nimport * as actions from '../actions/index';\n\nexport function* loginSaga(action) {\n    try {\n        const data = {\n            email: action.email,\n            password: action.password\n        }\n        \n        const res = yield axios.post('/user/login', data);\n  \n        if (res.data.success) {\n            yield localStorage.setItem('user', res.data.user.email);\n            yield put(actions.loginSuccess(res.data.user.email));\n        }\n        else {\n            yield put(actions.loginFail(res.data.message));\n        }\n    }\n    catch(err) {\n        console.log(err);\n    }\n}\n\nexport function* registerSaga(action) {\n    try {\n        const data = {\n            email: action.email,\n            password: action.password,\n            name: action.name,\n            phone: action.phone\n        }\n        \n        const res = yield axios.post('/user/upsert', data);\n  \n        if (res.data.success) {\n            yield localStorage.setItem('user', res.data.user.email);\n            yield put(actions.loginSuccess(res.data.user.email));\n        }\n        else {\n            yield put(actions.loginFail(res.data.message));\n        }\n    }\n    catch(err) {\n        console.log(err);\n    }\n}"]},"metadata":{},"sourceType":"module"}