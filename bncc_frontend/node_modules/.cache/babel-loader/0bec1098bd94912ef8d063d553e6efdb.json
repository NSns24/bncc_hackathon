{"ast":null,"code":"var _jsxFileName = \"/Users/ns/Code/bncc_frontend/src/containers/Preference/Time/TimeTable/TimeTable.js\";\nimport React from \"react\";\nimport { Button, Table } from \"antd\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../store/actions/index\";\n\nfunction TimeTable({\n  data,\n  onSubmit\n}) {\n  let table = null;\n\n  const returnDayName = id => {\n    if (id === 1) {\n      return \"Monday\";\n    } else if (id === 2) {\n      return \"Tuesday\";\n    } else if (id === 3) {\n      return \"Wednesday\";\n    } else if (id === 4) {\n      return \"Thursday\";\n    } else if (id === 5) {\n      return \"Friday\";\n    } else if (id === 6) {\n      return \"Saturday\";\n    } else if (id === 7) {\n      return \"Sunday\";\n    }\n  };\n\n  const columns = [{\n    title: 'Day',\n    dataIndex: 'dayID',\n    key: 'dayID'\n  }, {\n    title: 'Start Time',\n    dataIndex: 'start',\n    key: 'start'\n  }, {\n    title: 'End Time',\n    dataIndex: 'end',\n    key: 'end'\n  }];\n\n  if (data != null && data.length > 0) {\n    data.map((item, index) => {\n      data[index].dayID = returnDayName(item.dayId);\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Table, {\n    dataSource: data,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Next\"));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: () => dispatch(actions.updateCurrPref())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TimeTable);","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/containers/Preference/Time/TimeTable/TimeTable.js"],"names":["React","Button","Table","connect","actions","TimeTable","data","onSubmit","table","returnDayName","id","columns","title","dataIndex","key","length","map","item","index","dayID","dayId","mapDispatchToProps","dispatch","updateCurrPref"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAnB,EAAuC;AACnC,MAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAMC,aAAa,GAAGC,EAAE,IAAI;AACxB,QAAIA,EAAE,KAAK,CAAX,EAAc;AACV,aAAO,QAAP;AACH,KAFD,MAEO,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjB,aAAO,SAAP;AACH,KAFM,MAEA,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjB,aAAO,WAAP;AACH,KAFM,MAEA,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjB,aAAO,UAAP;AACH,KAFM,MAEA,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjB,aAAO,QAAP;AACH,KAFM,MAEA,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjB,aAAO,UAAP;AACH,KAFM,MAEA,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjB,aAAO,QAAP;AACH;AACJ,GAhBD;;AAkBA,QAAMC,OAAO,GAAG,CACZ;AACEC,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADY,EAMZ;AACEF,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANY,EAWZ;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAXY,CAAhB;;AAkBA,MAAIR,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACS,MAAL,GAAc,CAAlC,EAAqC;AACjCT,IAAAA,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtBZ,MAAAA,IAAI,CAACY,KAAD,CAAJ,CAAYC,KAAZ,GAAoBV,aAAa,CAACQ,IAAI,CAACG,KAAN,CAAjC;AACH,KAFD;AAGH;;AAED,SACI,0CACI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEd,IAAnB;AAAyB,IAAA,OAAO,EAAEK,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEJ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAQH;;AAED,MAAMc,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,QAAQ,EAAE,MAAMe,QAAQ,CAAClB,OAAO,CAACmB,cAAR,EAAD;AADrB,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAClB,IADkB,EAElBkB,kBAFkB,CAAP,CAGbhB,SAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Button, Table } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../../../store/actions/index\";\n\nfunction TimeTable({ data, onSubmit }) {\n    let table = null;\n\n    const returnDayName = id => {\n        if (id === 1) {\n            return \"Monday\";\n        } else if (id === 2) {\n            return \"Tuesday\";\n        } else if (id === 3) {\n            return \"Wednesday\";\n        } else if (id === 4) {\n            return \"Thursday\";\n        } else if (id === 5) {\n            return \"Friday\";\n        } else if (id === 6) {\n            return \"Saturday\";\n        } else if (id === 7) {\n            return \"Sunday\";\n        }\n    };\n\n    const columns = [\n        {\n          title: 'Day',\n          dataIndex: 'dayID',\n          key: 'dayID',\n        },\n        {\n          title: 'Start Time',\n          dataIndex: 'start',\n          key: 'start',\n        },\n        {\n          title: 'End Time',\n          dataIndex: 'end',\n          key: 'end',\n        },\n      ];\n\n    if (data != null && data.length > 0) {\n        data.map((item, index) => {\n            data[index].dayID = returnDayName(item.dayId)\n        })\n    }\n\n    return(\n        <>\n            <Table dataSource={data} columns={columns} />\n            <Button type=\"primary\" onClick={onSubmit}>\n                Next\n            </Button>\n        </>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmit: () => dispatch(actions.updateCurrPref())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(TimeTable);\n"]},"metadata":{},"sourceType":"module"}