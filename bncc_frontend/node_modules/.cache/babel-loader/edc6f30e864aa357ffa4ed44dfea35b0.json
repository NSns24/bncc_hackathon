{"ast":null,"code":"var _jsxFileName = \"/Users/ns/Code/bncc_frontend/src/containers/LandingPageAdmin/Register/Register.js\";\nimport React from \"react\";\nimport { Form, Input, Button, PageHeader } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction Register({\n  form,\n  history\n}) {\n  const getFieldDecorator = form.getFieldDecorator;\n\n  const sumbitHandler = e => {\n    e.preventDefault();\n  };\n\n  const validateConfirmPass = (rule, value, callback) => {\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Confirm Password not match!\");\n    } else {\n      callback();\n    }\n  };\n\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    onBack: () => history.replace(\"/\"),\n    title: \"Register Admin\",\n    style: {\n      padding: \"20px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, formItemLayout, {\n    onSubmit: sumbitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"E-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      type: \"email\",\n      message: \"The input is not valid E-mail!\"\n    }, {\n      required: true,\n      message: \"Please input your E-mail!\"\n    }]\n  })(React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    label: \"Password\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"Please input your password!\"\n    }]\n  })(React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    label: \"Confirm\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, getFieldDecorator(\"confirm\", {\n    rules: [{\n      required: true,\n      message: \"Please confirm your password!\"\n    }, {\n      validator: validateConfirmPass\n    }]\n  })(React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, getFieldDecorator(\"name\", {\n    rules: [{\n      required: true,\n      message: \"Please input your name!\",\n      whitespace: true\n    }]\n  })(React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, getFieldDecorator(\"phone\", {\n    rules: [{\n      required: true,\n      message: \"Please input your phone number!\"\n    }]\n  })(React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Register\"))));\n}\n\nexport default withRouter(Form.create()(Register));","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/containers/LandingPageAdmin/Register/Register.js"],"names":["React","Form","Input","Button","PageHeader","withRouter","Register","form","history","getFieldDecorator","sumbitHandler","e","preventDefault","validateConfirmPass","rule","value","callback","getFieldValue","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","replace","padding","rules","type","message","required","validator","whitespace","create"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,QAAgD,MAAhD;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAqC;AAAA,QACzBC,iBADyB,GACHF,IADG,CACzBE,iBADyB;;AAGjC,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AACnD,QAAID,KAAK,IAAIA,KAAK,KAAKR,IAAI,CAACU,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACnDD,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GAND;;AAQA,QAAME,cAAc,GAAG;AACnBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADE;AAENC,MAAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFE,KADS;AAKnBE,IAAAA,UAAU,EAAE;AACRH,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADI;AAERC,MAAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFI;AALO,GAAvB;AAWA,QAAMG,kBAAkB,GAAG;AACvBD,IAAAA,UAAU,EAAE;AACRH,MAAAA,EAAE,EAAE;AACAC,QAAAA,IAAI,EAAE,EADN;AAEAI,QAAAA,MAAM,EAAE;AAFR,OADI;AAKRH,MAAAA,EAAE,EAAE;AACAD,QAAAA,IAAI,EAAE,EADN;AAEAI,QAAAA,MAAM,EAAE;AAFR;AALI;AADW,GAA3B;AAaA,SACI,0CACI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAE,MAAMjB,OAAO,CAACkB,OAAR,CAAgB,GAAhB,CADlB;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD,oBAAUT,cAAV;AAA0B,IAAA,QAAQ,EAAER,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,iBAAiB,CAAC,OAAD,EAAU;AACxBmB,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE;AAFb,KALG;AADiB,GAAV,CAAjB,CAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADL,CADJ,EAeI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,UAAjB;AAA4B,IAAA,WAAW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,iBAAiB,CAAC,UAAD,EAAa;AAC3BmB,IAAAA,KAAK,EAAE,CACH;AACIG,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE;AAFb,KADG;AADoB,GAAb,CAAjB,CAOE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADL,CAfJ,EAyBI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,WAAW,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,iBAAiB,CAAC,SAAD,EAAY;AAC1BmB,IAAAA,KAAK,EAAE,CACH;AACIG,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIE,MAAAA,SAAS,EAAEnB;AADf,KALG;AADmB,GAAZ,CAAjB,CAUE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADL,CAzBJ,EAsCI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,iBAAiB,CAAC,MAAD,EAAS;AACvBmB,IAAAA,KAAK,EAAE,CACH;AACIG,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE,yBAFb;AAGIG,MAAAA,UAAU,EAAE;AAHhB,KADG;AADgB,GAAT,CAAjB,CAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADL,CAtCJ,EAiDI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,iBAAiB,CAAC,OAAD,EAAU;AACxBmB,IAAAA,KAAK,EAAE,CACH;AACIG,MAAAA,QAAQ,EAAE,IADd;AAEID,MAAAA,OAAO,EAAE;AAFb,KADG;AADiB,GAAV,CAAjB,CAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADL,CAjDJ,EA2DI,oBAAC,IAAD,CAAM,IAAN,oBAAeN,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA3DJ,CANJ,CADJ;AA0EH;;AAED,eAAenB,UAAU,CAACJ,IAAI,CAACiC,MAAL,GAAc5B,QAAd,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, PageHeader } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction Register({ form, history }) {\n    const { getFieldDecorator } = form;\n\n    const sumbitHandler = e => {\n        e.preventDefault();\n    };\n\n    const validateConfirmPass = (rule, value, callback) => {\n        if (value && value !== form.getFieldValue(\"password\")) {\n            callback(\"Confirm Password not match!\");\n        } else {\n            callback();\n        }\n    };\n\n    const formItemLayout = {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 }\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 }\n        }\n    };\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0\n            },\n            sm: {\n                span: 16,\n                offset: 8\n            }\n        }\n    };\n\n    return (\n        <>\n            <PageHeader\n                onBack={() => history.replace(\"/\")}\n                title=\"Register Admin\"\n                style={{ padding: \"20px 0\" }}\n            />\n            <Form {...formItemLayout} onSubmit={sumbitHandler}>\n                <Form.Item label=\"E-mail\">\n                    {getFieldDecorator(\"email\", {\n                        rules: [\n                            {\n                                type: \"email\",\n                                message: \"The input is not valid E-mail!\"\n                            },\n                            {\n                                required: true,\n                                message: \"Please input your E-mail!\"\n                            }\n                        ]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator(\"password\", {\n                        rules: [\n                            {\n                                required: true,\n                                message: \"Please input your password!\"\n                            }\n                        ]\n                    })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item label=\"Confirm\" hasFeedback>\n                    {getFieldDecorator(\"confirm\", {\n                        rules: [\n                            {\n                                required: true,\n                                message: \"Please confirm your password!\"\n                            },\n                            {\n                                validator: validateConfirmPass\n                            }\n                        ]\n                    })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item label=\"Name\">\n                    {getFieldDecorator(\"name\", {\n                        rules: [\n                            {\n                                required: true,\n                                message: \"Please input your name!\",\n                                whitespace: true\n                            }\n                        ]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Phone\">\n                    {getFieldDecorator(\"phone\", {\n                        rules: [\n                            {\n                                required: true,\n                                message: \"Please input your phone number!\"\n                            }\n                        ]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n}\n\nexport default withRouter(Form.create()(Register));\n"]},"metadata":{},"sourceType":"module"}