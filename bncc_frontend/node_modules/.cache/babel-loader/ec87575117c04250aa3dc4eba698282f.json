{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport axios from \"../../axios\";\nimport * as actions from \"../actions/index\";\nexport function* loginSaga(action) {\n  try {\n    const data = {\n      email: action.email,\n      password: action.password\n    };\n    const res = yield axios.post(\"/user/login\", data);\n\n    if (res.data.success) {\n      yield localStorage.setItem(\"user\", res.data.user.email);\n      yield put(actions.loginSuccess(res.data.user));\n    } else {\n      yield put(actions.loginFail(res.data.message));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* registerSaga(action) {\n  try {\n    const data = {\n      user: {\n        email: action.email,\n        password: action.password,\n        name: action.name,\n        phone: action.phone,\n        role: action.role\n      }\n    };\n    const res = yield axios.post(\"/user/upsert\", data);\n\n    if (res.data.success) {\n      yield localStorage.setItem(\"user\", res.data.user.email);\n      yield put(actions.registerSuccess(res.data.user));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* getUserSaga(action) {\n  try {\n    const data = {\n      email: localStorage.getItem(\"user\")\n    };\n    const res = yield axios.post(\"/user/get/email\", data);\n\n    if (res.data.success) {\n      yield put(actions.loginSuccess(res.data.user));\n\n      if (res.data.user.venueId) {\n        yield put(actions.setVenueID(res.data.user.venueId));\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* logoutSaga(action) {\n  yield localStorage.removeItem(\"user\");\n  yield put(actions.logoutSuccess());\n}","map":{"version":3,"sources":["/Users/ns/Code/bncc_frontend/src/store/sagas/auth.js"],"names":["put","axios","actions","loginSaga","action","data","email","password","res","post","success","localStorage","setItem","user","loginSuccess","loginFail","message","err","console","log","registerSaga","name","phone","role","registerSuccess","getUserSaga","getItem","venueId","setVenueID","logoutSaga","removeItem","logoutSuccess"],"mappings":"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","sourcesContent":["import { put } from \"redux-saga/effects\";\nimport axios from \"../../axios\";\nimport * as actions from \"../actions/index\";\n\nexport function* loginSaga(action) {\n    try {\n        const data = {\n            email: action.email,\n            password: action.password\n        };\n\n        const res = yield axios.post(\"/user/login\", data);\n\n        if (res.data.success) {\n            yield localStorage.setItem(\"user\", res.data.user.email);\n            yield put(actions.loginSuccess(res.data.user));\n        } else {\n            yield put(actions.loginFail(res.data.message));\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* registerSaga(action) {\n    try {\n        const data = {\n            user: {\n                email: action.email,\n                password: action.password,\n                name: action.name,\n                phone: action.phone,\n                role: action.role\n            }\n        };\n\n        const res = yield axios.post(\"/user/upsert\", data);\n\n        if (res.data.success) {\n            yield localStorage.setItem(\"user\", res.data.user.email);\n            yield put(actions.registerSuccess(res.data.user));\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* getUserSaga(action) {\n    try {\n        const data = {\n            email: localStorage.getItem(\"user\")\n        };\n\n        const res = yield axios.post(\"/user/get/email\", data);\n\n        if (res.data.success) {\n            yield put(actions.loginSuccess(res.data.user));\n            \n            if (res.data.user.venueId) {\n                yield put(actions.setVenueID(res.data.user.venueId));\n            }\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* logoutSaga(action) {\n    yield localStorage.removeItem(\"user\");\n    yield put(actions.logoutSuccess());\n}\n"]},"metadata":{},"sourceType":"module"}